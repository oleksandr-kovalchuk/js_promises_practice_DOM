{"mappings":"ACEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EAAgD,OAAA,EAAE,cAAc,E,GAEhE,IAAM,EAAmB,SAAC,CAAA,CAAS,CAAnC,EACE,SAAS,IAAI,CAAC,kBAAkB,CAC9B,aACC,eAA8C,MAAA,CAAhC,EAAK,6BAAmC,MAAA,CAAR,EAAQ,UAE3D,EAEM,EAAU,SAAC,CAAjB,EAA6B,OAAA,EAAiB,EAAS,U,EAGjD,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAM,EAAe,SAAC,CAAtB,EACmB,IAAb,EAAE,MAAM,GACV,IACA,SAAS,mBAAmB,CAAC,QAAS,GAE1C,EAEA,SAAS,gBAAgB,CAAC,QAAS,GAEnC,WAAW,WACT,EAAO,AAAI,MAAM,+BACjB,SAAS,mBAAmB,CAAC,QAAS,EACxC,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,IAAM,EAAe,SAAC,CAAtB,EACM,CAAA,AAAa,IAAb,EAAE,MAAM,EAAU,AAAa,IAAb,EAAE,MAAM,AAAK,IACjC,IACA,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAI,EAAoB,CAAA,EACpB,EAAqB,CAAA,EAEnB,EAAmB,SAAC,CAA1B,EACmB,IAAb,EAAE,MAAM,GACV,EAAoB,CAAA,EACpB,IAEJ,EAEM,EAAoB,SAAC,CAA3B,EACmB,IAAb,EAAE,MAAM,GACV,EAAqB,CAAA,EACrB,IAEJ,EAEM,EAAkB,WAClB,GAAqB,IACvB,IACA,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEA,EACG,IAAI,CAAC,WAAM,OAAA,EAAQ,6BACnB,GAAA,KAAK,CAAC,SAAC,CAAP,EAAe,OA/DS,EA+DH,EAAI,OAAO,CA/DkB,Q,GAiErD,EAAc,IAAI,CAAC,WAAM,OAAA,EAAQ,8B,GAEjC,EAAa,IAAI,CAAC,WAAM,OAAA,EAAQ,6B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"contextmenu\", function(e) {\n    return e.preventDefault();\n});\nvar showNotification = function(message, type) {\n    document.body.insertAdjacentHTML(\"afterbegin\", '<div class=\"'.concat(type, '\" data-qa=\"notification\">').concat(message, \"</div>\"));\n};\nvar success = function(message) {\n    return showNotification(message, \"success\");\n};\nvar error = function(message) {\n    return showNotification(message, \"error\");\n};\nvar firstPromise = new Promise(function(resolve, reject) {\n    var clickHandler = function(e) {\n        if (e.button === 0) {\n            resolve();\n            document.removeEventListener(\"click\", clickHandler);\n        }\n    };\n    document.addEventListener(\"click\", clickHandler);\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n        document.removeEventListener(\"click\", clickHandler);\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve) {\n    var clickHandler = function(e) {\n        if (e.button === 0 || e.button === 2) {\n            resolve();\n            document.removeEventListener(\"click\", clickHandler);\n            document.removeEventListener(\"contextmenu\", clickHandler);\n        }\n    };\n    document.addEventListener(\"click\", clickHandler);\n    document.addEventListener(\"contextmenu\", clickHandler);\n});\nvar thirdPromise = new Promise(function(resolve) {\n    var leftClickHappened = false;\n    var rightClickHappened = false;\n    var leftClickHandler = function(e) {\n        if (e.button === 0) {\n            leftClickHappened = true;\n            checkBothClicks();\n        }\n    };\n    var rightClickHandler = function(e) {\n        if (e.button === 2) {\n            rightClickHappened = true;\n            checkBothClicks();\n        }\n    };\n    var checkBothClicks = function() {\n        if (leftClickHappened && rightClickHappened) {\n            resolve();\n            document.removeEventListener(\"click\", leftClickHandler);\n            document.removeEventListener(\"contextmenu\", rightClickHandler);\n        }\n    };\n    document.addEventListener(\"click\", leftClickHandler);\n    document.addEventListener(\"contextmenu\", rightClickHandler);\n});\nfirstPromise.then(function() {\n    return success(\"First promise was resolved\");\n}).catch(function(err) {\n    return error(err.message);\n});\nsecondPromise.then(function() {\n    return success(\"Second promise was resolved\");\n});\nthirdPromise.then(function() {\n    return success(\"Third promise was resolved\");\n});\n\n//# sourceMappingURL=index.806a93f1.js.map\n","'use strict';\n\ndocument.addEventListener('contextmenu', (e) => e.preventDefault());\n\nconst showNotification = (message, type) => {\n  document.body.insertAdjacentHTML(\n    'afterbegin',\n    `<div class=\"${type}\" data-qa=\"notification\">${message}</div>`,\n  );\n};\n\nconst success = (message) => showNotification(message, 'success');\nconst error = (message) => showNotification(message, 'error');\n\nconst firstPromise = new Promise((resolve, reject) => {\n  const clickHandler = (e) => {\n    if (e.button === 0) {\n      resolve();\n      document.removeEventListener('click', clickHandler);\n    }\n  };\n\n  document.addEventListener('click', clickHandler);\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n    document.removeEventListener('click', clickHandler);\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  const clickHandler = (e) => {\n    if (e.button === 0 || e.button === 2) {\n      resolve();\n      document.removeEventListener('click', clickHandler);\n      document.removeEventListener('contextmenu', clickHandler);\n    }\n  };\n\n  document.addEventListener('click', clickHandler);\n  document.addEventListener('contextmenu', clickHandler);\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftClickHappened = false;\n  let rightClickHappened = false;\n\n  const leftClickHandler = (e) => {\n    if (e.button === 0) {\n      leftClickHappened = true;\n      checkBothClicks();\n    }\n  };\n\n  const rightClickHandler = (e) => {\n    if (e.button === 2) {\n      rightClickHappened = true;\n      checkBothClicks();\n    }\n  };\n\n  const checkBothClicks = () => {\n    if (leftClickHappened && rightClickHappened) {\n      resolve();\n      document.removeEventListener('click', leftClickHandler);\n      document.removeEventListener('contextmenu', rightClickHandler);\n    }\n  };\n\n  document.addEventListener('click', leftClickHandler);\n  document.addEventListener('contextmenu', rightClickHandler);\n});\n\nfirstPromise\n  .then(() => success('First promise was resolved'))\n  .catch((err) => error(err.message));\n\nsecondPromise.then(() => success('Second promise was resolved'));\n\nthirdPromise.then(() => success('Third promise was resolved'));\n"],"names":["document","addEventListener","e","preventDefault","showNotification","message","type","body","insertAdjacentHTML","concat","success","firstPromise","Promise","resolve","reject","clickHandler","button","removeEventListener","setTimeout","Error","secondPromise","thirdPromise","leftClickHappened","rightClickHappened","leftClickHandler","checkBothClicks","rightClickHandler","then","catch","err"],"version":3,"file":"index.806a93f1.js.map"}